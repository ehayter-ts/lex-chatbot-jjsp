{"version":3,"file":"index.js","sources":["../node_modules/rollup-plugin-node-builtins/src/es6/empty.js","../node_modules/crypto-js/core.js","../node_modules/rollup-plugin-node-builtins/src/es6/punycode.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/hmac.js","../node_modules/crypto-js/hmac-sha256.js","../node_modules/rollup-plugin-node-builtins/src/es6/util.js","../node_modules/rollup-plugin-node-builtins/src/es6/qs.js","../node_modules/rollup-plugin-node-builtins/src/es6/url.js","../node_modules/aws4/lru.js","../node_modules/aws4/aws4.js","../src/index.ts"],"sourcesContent":["export default {};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\treturn CryptoJS;\n\n}));","/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nfunction ucs2encode(array) {\n  return map(array, function(value) {\n    var output = '';\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n    output += stringFromCharCode(value);\n    return output;\n  }).join('');\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n  if (codePoint - 48 < 10) {\n    return codePoint - 22;\n  }\n  if (codePoint - 65 < 26) {\n    return codePoint - 65;\n  }\n  if (codePoint - 97 < 26) {\n    return codePoint - 97;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n  // Don't use UCS-2\n  var output = [],\n    inputLength = input.length,\n    out,\n    i = 0,\n    n = initialN,\n    bias = initialBias,\n    basic,\n    j,\n    index,\n    oldi,\n    w,\n    k,\n    digit,\n    t,\n    /** Cached calculation results */\n    baseMinusT;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */ ) {\n\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    for (oldi = i, w = 1, k = base; /* no condition */ ; k += base) {\n\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n      if (digit < t) {\n        break;\n      }\n\n      baseMinusT = base - t;\n      if (w > floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n\n    }\n\n    out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi == 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output\n    output.splice(i++, 0, n);\n\n  }\n\n  return ucs2encode(output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n  return mapDomain(input, function(string) {\n    return regexPunycode.test(string) ?\n      decode(string.slice(4).toLowerCase()) :\n      string;\n  });\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode(string) :\n      string;\n  });\n}\nexport var version = '1.4.1';\n/**\n * An object of methods to convert from JavaScript's internal character\n * representation (UCS-2) to Unicode code points, and back.\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode\n * @type Object\n */\n\nexport var ucs2 = {\n  decode: ucs2decode,\n  encode: ucs2encode\n};\nexport default {\n  version: version,\n  ucs2: ucs2,\n  toASCII: toASCII,\n  toUnicode: toUnicode,\n  encode: encode,\n  decode: decode\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nimport {toASCII} from 'punycode';\nimport {isObject,isString,isNullOrUndefined,isNull} from 'util';\nimport {parse as qsParse,stringify as qsStringify} from 'querystring';\nexport {\n  urlParse as parse,\n  urlResolve as resolve,\n  urlResolveObject as resolveObject,\n  urlFormat as format\n};\nexport default {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n}\nexport function Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse(this, url, parseQueryString, slashesDenoteHost);\n}\n\nfunction parse(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = qsParse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = qsParse(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject(self.query) &&\n    Object.keys(self.query).length) {\n    query = qsStringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n}\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n","module.exports = function(size) {\n  return new LruCache(size)\n}\n\nfunction LruCache(size) {\n  this.capacity = size | 0\n  this.map = Object.create(null)\n  this.list = new DoublyLinkedList()\n}\n\nLruCache.prototype.get = function(key) {\n  var node = this.map[key]\n  if (node == null) return undefined\n  this.used(node)\n  return node.val\n}\n\nLruCache.prototype.set = function(key, val) {\n  var node = this.map[key]\n  if (node != null) {\n    node.val = val\n  } else {\n    if (!this.capacity) this.prune()\n    if (!this.capacity) return false\n    node = new DoublyLinkedNode(key, val)\n    this.map[key] = node\n    this.capacity--\n  }\n  this.used(node)\n  return true\n}\n\nLruCache.prototype.used = function(node) {\n  this.list.moveToFront(node)\n}\n\nLruCache.prototype.prune = function() {\n  var node = this.list.pop()\n  if (node != null) {\n    delete this.map[node.key]\n    this.capacity++\n  }\n}\n\n\nfunction DoublyLinkedList() {\n  this.firstNode = null\n  this.lastNode = null\n}\n\nDoublyLinkedList.prototype.moveToFront = function(node) {\n  if (this.firstNode == node) return\n\n  this.remove(node)\n\n  if (this.firstNode == null) {\n    this.firstNode = node\n    this.lastNode = node\n    node.prev = null\n    node.next = null\n  } else {\n    node.prev = null\n    node.next = this.firstNode\n    node.next.prev = node\n    this.firstNode = node\n  }\n}\n\nDoublyLinkedList.prototype.pop = function() {\n  var lastNode = this.lastNode\n  if (lastNode != null) {\n    this.remove(lastNode)\n  }\n  return lastNode\n}\n\nDoublyLinkedList.prototype.remove = function(node) {\n  if (this.firstNode == node) {\n    this.firstNode = node.next\n  } else if (node.prev != null) {\n    node.prev.next = node.next\n  }\n  if (this.lastNode == node) {\n    this.lastNode = node.prev\n  } else if (node.next != null) {\n    node.next.prev = node.prev\n  }\n}\n\n\nfunction DoublyLinkedNode(key, val) {\n  this.key = key\n  this.val = val\n  this.prev = null\n  this.next = null\n}\n","var aws4 = exports,\n    url = require('url'),\n    querystring = require('querystring'),\n    crypto = require('crypto'),\n    lru = require('./lru'),\n    credentialsCache = lru(1000)\n\n// http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html\n\nfunction hmac(key, string, encoding) {\n  return crypto.createHmac('sha256', key).update(string, 'utf8').digest(encoding)\n}\n\nfunction hash(string, encoding) {\n  return crypto.createHash('sha256').update(string, 'utf8').digest(encoding)\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\nfunction encodeRfc3986Full(str) {\n  return encodeRfc3986(encodeURIComponent(str))\n}\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\n// credentials: { accessKeyId, secretAccessKey, [sessionToken] }\nfunction RequestSigner(request, credentials) {\n\n  if (typeof request === 'string') request = url.parse(request)\n\n  var headers = request.headers = (request.headers || {}),\n      hostParts = (!this.service || !this.region) && this.matchHost(request.hostname || request.host || headers.Host || headers.host)\n\n  this.request = request\n  this.credentials = credentials || this.defaultCredentials()\n\n  this.service = request.service || hostParts[0] || ''\n  this.region = request.region || hostParts[1] || 'us-east-1'\n\n  // SES uses a different domain from the service name\n  if (this.service === 'email') this.service = 'ses'\n\n  if (!request.method && request.body)\n    request.method = 'POST'\n\n  if (!headers.Host && !headers.host) {\n    headers.Host = request.hostname || request.host || this.createHost()\n\n    // If a port is specified explicitly, use it as is\n    if (request.port)\n      headers.Host += ':' + request.port\n  }\n  if (!request.hostname && !request.host)\n    request.hostname = headers.Host || headers.host\n\n  this.isCodeCommitGit = this.service === 'codecommit' && request.method === 'GIT'\n}\n\nRequestSigner.prototype.matchHost = function(host) {\n  var match = (host || '').match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com(\\.cn)?$/)\n  var hostParts = (match || []).slice(1, 3)\n\n  // ES's hostParts are sometimes the other way round, if the value that is expected\n  // to be region equals ‘es’ switch them back\n  // e.g. search-cluster-name-aaaa00aaaa0aaa0aaaaaaa0aaa.us-east-1.es.amazonaws.com\n  if (hostParts[1] === 'es')\n    hostParts = hostParts.reverse()\n\n  if (hostParts[1] == 's3') {\n    hostParts[0] = 's3'\n    hostParts[1] = 'us-east-1'\n  } else {\n    for (var i = 0; i < 2; i++) {\n      if (/^s3-/.test(hostParts[i])) {\n        hostParts[1] = hostParts[i].slice(3)\n        hostParts[0] = 's3'\n        break\n      }\n    }\n  }\n\n  return hostParts\n}\n\n// http://docs.aws.amazon.com/general/latest/gr/rande.html\nRequestSigner.prototype.isSingleRegion = function() {\n  // Special case for S3 and SimpleDB in us-east-1\n  if (['s3', 'sdb'].indexOf(this.service) >= 0 && this.region === 'us-east-1') return true\n\n  return ['cloudfront', 'ls', 'route53', 'iam', 'importexport', 'sts']\n    .indexOf(this.service) >= 0\n}\n\nRequestSigner.prototype.createHost = function() {\n  var region = this.isSingleRegion() ? '' : '.' + this.region,\n      subdomain = this.service === 'ses' ? 'email' : this.service\n  return subdomain + region + '.amazonaws.com'\n}\n\nRequestSigner.prototype.prepareRequest = function() {\n  this.parsePath()\n\n  var request = this.request, headers = request.headers, query\n\n  if (request.signQuery) {\n\n    this.parsedPath.query = query = this.parsedPath.query || {}\n\n    if (this.credentials.sessionToken)\n      query['X-Amz-Security-Token'] = this.credentials.sessionToken\n\n    if (this.service === 's3' && !query['X-Amz-Expires'])\n      query['X-Amz-Expires'] = 86400\n\n    if (query['X-Amz-Date'])\n      this.datetime = query['X-Amz-Date']\n    else\n      query['X-Amz-Date'] = this.getDateTime()\n\n    query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256'\n    query['X-Amz-Credential'] = this.credentials.accessKeyId + '/' + this.credentialString()\n    query['X-Amz-SignedHeaders'] = this.signedHeaders()\n\n  } else {\n\n    if (!request.doNotModifyHeaders && !this.isCodeCommitGit) {\n      if (request.body && !headers['Content-Type'] && !headers['content-type'])\n        headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8'\n\n      if (request.body && !headers['Content-Length'] && !headers['content-length'])\n        headers['Content-Length'] = Buffer.byteLength(request.body)\n\n      if (this.credentials.sessionToken && !headers['X-Amz-Security-Token'] && !headers['x-amz-security-token'])\n        headers['X-Amz-Security-Token'] = this.credentials.sessionToken\n\n      if (this.service === 's3' && !headers['X-Amz-Content-Sha256'] && !headers['x-amz-content-sha256'])\n        headers['X-Amz-Content-Sha256'] = hash(this.request.body || '', 'hex')\n\n      if (headers['X-Amz-Date'] || headers['x-amz-date'])\n        this.datetime = headers['X-Amz-Date'] || headers['x-amz-date']\n      else\n        headers['X-Amz-Date'] = this.getDateTime()\n    }\n\n    delete headers.Authorization\n    delete headers.authorization\n  }\n}\n\nRequestSigner.prototype.sign = function() {\n  if (!this.parsedPath) this.prepareRequest()\n\n  if (this.request.signQuery) {\n    this.parsedPath.query['X-Amz-Signature'] = this.signature()\n  } else {\n    this.request.headers.Authorization = this.authHeader()\n  }\n\n  this.request.path = this.formatPath()\n\n  return this.request\n}\n\nRequestSigner.prototype.getDateTime = function() {\n  if (!this.datetime) {\n    var headers = this.request.headers,\n      date = new Date(headers.Date || headers.date || new Date)\n\n    this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '')\n\n    // Remove the trailing 'Z' on the timestamp string for CodeCommit git access\n    if (this.isCodeCommitGit) this.datetime = this.datetime.slice(0, -1)\n  }\n  return this.datetime\n}\n\nRequestSigner.prototype.getDate = function() {\n  return this.getDateTime().substr(0, 8)\n}\n\nRequestSigner.prototype.authHeader = function() {\n  return [\n    'AWS4-HMAC-SHA256 Credential=' + this.credentials.accessKeyId + '/' + this.credentialString(),\n    'SignedHeaders=' + this.signedHeaders(),\n    'Signature=' + this.signature(),\n  ].join(', ')\n}\n\nRequestSigner.prototype.signature = function() {\n  var date = this.getDate(),\n      cacheKey = [this.credentials.secretAccessKey, date, this.region, this.service].join(),\n      kDate, kRegion, kService, kCredentials = credentialsCache.get(cacheKey)\n  if (!kCredentials) {\n    kDate = hmac('AWS4' + this.credentials.secretAccessKey, date)\n    kRegion = hmac(kDate, this.region)\n    kService = hmac(kRegion, this.service)\n    kCredentials = hmac(kService, 'aws4_request')\n    credentialsCache.set(cacheKey, kCredentials)\n  }\n  return hmac(kCredentials, this.stringToSign(), 'hex')\n}\n\nRequestSigner.prototype.stringToSign = function() {\n  return [\n    'AWS4-HMAC-SHA256',\n    this.getDateTime(),\n    this.credentialString(),\n    hash(this.canonicalString(), 'hex'),\n  ].join('\\n')\n}\n\nRequestSigner.prototype.canonicalString = function() {\n  if (!this.parsedPath) this.prepareRequest()\n\n  var pathStr = this.parsedPath.path,\n      query = this.parsedPath.query,\n      headers = this.request.headers,\n      queryStr = '',\n      normalizePath = this.service !== 's3',\n      decodePath = this.service === 's3' || this.request.doNotEncodePath,\n      decodeSlashesInPath = this.service === 's3',\n      firstValOnly = this.service === 's3',\n      bodyHash\n\n  if (this.service === 's3' && this.request.signQuery) {\n    bodyHash = 'UNSIGNED-PAYLOAD'\n  } else if (this.isCodeCommitGit) {\n    bodyHash = ''\n  } else {\n    bodyHash = headers['X-Amz-Content-Sha256'] || headers['x-amz-content-sha256'] ||\n      hash(this.request.body || '', 'hex')\n  }\n\n  if (query) {\n    var reducedQuery = Object.keys(query).reduce(function(obj, key) {\n      if (!key) return obj\n      obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n        (firstValOnly ? query[key][0] : query[key])\n      return obj\n    }, {})\n    var encodedQueryPieces = []\n    Object.keys(reducedQuery).sort().forEach(function(key) {\n      if (!Array.isArray(reducedQuery[key])) {\n        encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]))\n      } else {\n        reducedQuery[key].map(encodeRfc3986Full).sort()\n          .forEach(function(val) { encodedQueryPieces.push(key + '=' + val) })\n      }\n    })\n    queryStr = encodedQueryPieces.join('&')\n  }\n  if (pathStr !== '/') {\n    if (normalizePath) pathStr = pathStr.replace(/\\/{2,}/g, '/')\n    pathStr = pathStr.split('/').reduce(function(path, piece) {\n      if (normalizePath && piece === '..') {\n        path.pop()\n      } else if (!normalizePath || piece !== '.') {\n        if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n        path.push(encodeRfc3986Full(piece))\n      }\n      return path\n    }, []).join('/')\n    if (pathStr[0] !== '/') pathStr = '/' + pathStr\n    if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/')\n  }\n\n  return [\n    this.request.method || 'GET',\n    pathStr,\n    queryStr,\n    this.canonicalHeaders() + '\\n',\n    this.signedHeaders(),\n    bodyHash,\n  ].join('\\n')\n}\n\nRequestSigner.prototype.canonicalHeaders = function() {\n  var headers = this.request.headers\n  function trimAll(header) {\n    return header.toString().trim().replace(/\\s+/g, ' ')\n  }\n  return Object.keys(headers)\n    .sort(function(a, b) { return a.toLowerCase() < b.toLowerCase() ? -1 : 1 })\n    .map(function(key) { return key.toLowerCase() + ':' + trimAll(headers[key]) })\n    .join('\\n')\n}\n\nRequestSigner.prototype.signedHeaders = function() {\n  return Object.keys(this.request.headers)\n    .map(function(key) { return key.toLowerCase() })\n    .sort()\n    .join(';')\n}\n\nRequestSigner.prototype.credentialString = function() {\n  return [\n    this.getDate(),\n    this.region,\n    this.service,\n    'aws4_request',\n  ].join('/')\n}\n\nRequestSigner.prototype.defaultCredentials = function() {\n  var env = process.env\n  return {\n    accessKeyId: env.AWS_ACCESS_KEY_ID || env.AWS_ACCESS_KEY,\n    secretAccessKey: env.AWS_SECRET_ACCESS_KEY || env.AWS_SECRET_KEY,\n    sessionToken: env.AWS_SESSION_TOKEN,\n  }\n}\n\nRequestSigner.prototype.parsePath = function() {\n  var path = this.request.path || '/'\n\n  // S3 doesn't always encode characters > 127 correctly and\n  // all services don't encode characters > 255 correctly\n  // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n  if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n    path = encodeURI(decodeURI(path))\n  }\n\n  var queryIx = path.indexOf('?'),\n      query = null\n\n  if (queryIx >= 0) {\n    query = querystring.parse(path.slice(queryIx + 1))\n    path = path.slice(0, queryIx)\n  }\n\n  this.parsedPath = {\n    path: path,\n    query: query,\n  }\n}\n\nRequestSigner.prototype.formatPath = function() {\n  var path = this.parsedPath.path,\n      query = this.parsedPath.query\n\n  if (!query) return path\n\n  // Services don't support empty query string keys\n  if (query[''] != null) delete query['']\n\n  return path + '?' + encodeRfc3986(querystring.stringify(query))\n}\n\naws4.RequestSigner = RequestSigner\n\naws4.sign = function(request, credentials) {\n  return new RequestSigner(request, credentials).sign()\n}\n","import '@k2oss/k2-broker-core';\nimport * as CryptoJS from \"crypto-js/core\";\nimport 'crypto-js/hmac-sha256';\nimport * as aws4 from 'aws4';\n\nmetadata = {\n    systemName: \"AWS_Lex_ChatBot\",\n    displayName: \"AWS Lex ChatBot Broker\",\n    description: \"AWS Lex ChatBot Broker\",\n    configuration: {\n        \"AwsRegion\": {\n            displayName: \"AWS Region\",\n            type: \"string\",\n            value: \"eu-west-2\"\n        },\n        \"BotName\": {\n            displayName: \"Bot Name\",\n            type: \"string\",\n            value: \"MedicalBotNHS\"\n        },\n        \"BotAlias\": {\n            displayName: \"Bot Name\",\n            type: \"string\",\n            value: \"latestversion\"\n        },\n        \"UserID\": {\n            displayName: \"User ID\",\n            type: \"string\",\n            value: \"AKIARXLDA4AZB24QPA72\"\n        },\n        \"UserSecret\": {\n            displayName: \"User Secret\",\n            type: \"string\",\n            value: \"\"\n        }\n    }\n};\n\nfunction getAmzDate(dateStr) {\n    var chars = [\":\", \"-\"];\n    for (var i = 0; i < chars.length; i++) {\n        while (dateStr.indexOf(chars[i]) != -1) {\n            dateStr = dateStr.replace(chars[i], \"\");\n        }\n    }\n    dateStr = dateStr.split(\".\")[0] + \"Z\";\n    return dateStr;\n}\n\nfunction getSignatureKey(dateStamp: string) {\n    var kDate = CryptoJS.HmacSHA256(dateStamp, \"AWS4\" + metadata.configuration[\"UserSecret\"]);\n    var kRegion = CryptoJS.HmacSHA256(metadata.configuration[\"AwsRegion\"].toString(), kDate);\n    var kService = CryptoJS.HmacSHA256(\"lex\", kRegion);\n    var kSigning = CryptoJS.HmacSHA256(\"aws4_request\", kService);\n\n    return kSigning;\n}\n\nondescribe = async function ({ }): Promise<void> {\n    postSchema({\n        objects: {\n            \"message\": {\n                displayName: \"Message\",\n                description: \"Represents a text reply\",\n                properties: {\n                    \"inputText\": {\n                        displayName: \"Input Text\",\n                        type: \"string\"\n                    },\n                    \"outputText\": {\n                        displayName: \"Output Text\",\n                        type: \"string\"\n                    }\n                },\n                methods: {\n                    \"postText\": {\n                        displayName: \"Post Text\",\n                        type: \"execute\",\n                        inputs: [\"inputText\"],\n                        outputs: [\"outputText\"]\n                    }\n                }\n            }\n        }\n    });\n}\n\nonexecute = async function ({ objectName, methodName, parameters, properties, configuration }): Promise<void> {\n    switch (objectName) {\n        case \"message\": await onexecuteMessage(methodName, properties, configuration); break;\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\n    }\n}\n\nasync function onexecuteMessage(methodName: string, properties: SingleRecord, configuration: SingleRecord): Promise<void> {\n    switch (methodName) {\n        case \"postText\": await onexecutePostText(properties, configuration); break;\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\n    }\n}\n\nfunction onexecutePostText(properties: SingleRecord, configuration: SingleRecord): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        var body = {\n            'inputText': properties[\"inputText\"].toString()\n        };\n\n        var bodyText = JSON.stringify(body);\n        var amzDate = getAmzDate(new Date().toISOString());\n        var authDate = amzDate.split(\"T\")[0];\n        var signature = getSignatureKey(authDate);\n        var authKey = CryptoJS.HmacSHA256(bodyText, signature);\n        var host = `runtime.lex.${configuration[\"AwsRegion\"]}.amazonaws.com`;\n        var bodyHash = CryptoJS.SHA256(bodyText).toString();\n        var url = `/bot/${configuration[\"BotName\"]}/alias/${configuration[\"BotAlias\"]}/user/${configuration[\"UserID\"]}/text HTTP/1.1`;\n        var authHeader = `AWS4-HMAC-SHA256 Credential=${configuration[\"UserID\"].toString()}/${authDate}/${configuration[\"AwsRegion\"].toString()}/lex/aws4_request, SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=${authKey}`;\n        var postURL = `https://runtime.lex.${configuration[\"AwsRegion\"]}.amazonaws.com/bot/${configuration[\"BotName\"]}/alias/${configuration[\"BotAlias\"]}/user/${configuration[\"UserID\"]}/text`;\n        \n        var canonicalReq = \n            'POST\\n' + \n            url + \n            '\\n\\ncontent-type:application/json' + \n            '\\nhost:' + host +\n            '\\nx-amz-content-sha256:' + bodyHash +\n            '\\nx-amz-date:' + amzDate +\n            '\\ncontent-type;host;x-amz-content-sha256;x-amz-date' + \n            '\\n' + bodyHash;\n\n        // hash the canonical request\n        var canonicalReqHash = CryptoJS.SHA256(canonicalReq).toString();\n\n        // form our String-to-Sign\n        var stringToSign = 'AWS4-HMAC-SHA256\\n' +\n            amzDate + '\\n' +\n            authDate + '/' + configuration[\"AwsRegion\"] + '/lex/aws4_request\\n' +\n            canonicalReqHash;\n\n        // Sign our String-to-Sign with our Signing Key\n        var authKey = CryptoJS.HmacSHA256(signature, stringToSign);\n\n        var awsString = aws4.sign({\n            host: host,\n            service: 'lex',\n            region: configuration[\"AwsRegion\"].toString(),\n            method: 'POST',\n            path: url,\n            headers: {\n                'Content-Type': 'application/json',\n                'Host': host,\n                'X-Amz-Date': amzDate,\n                'X-Amz-Content-SHA256': bodyHash,\n                'Content-Length': (bodyText.length - 2).toString()\n            },\n            body: bodyText\n          })\n\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            try {\n                if (xhr.readyState !== 4) return;\n                if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\n\n                var obj = JSON.parse(xhr.responseText);\n                postResult({\n                    \"outputText\": obj.message,\n                });\n                resolve();\n            } catch (e) {\n                postResult({\n                    \"outputText\": `ErrorMessage: ${e.message}\\nAWSString: ${awsString}\\nHeader: ${authHeader}\\nURL: ${postURL}\\nSignature: ${signature}\\nBodyHash: ${bodyHash}\\nAmzDate: ${amzDate}\\nAuthDate: ${authDate}\\nCanonicalReq: ${canonicalReq}\\nAuthKey: ${authKey}\\nCanonicalHash: ${canonicalReqHash}\\nStringToSign: ${stringToSign}`,\n                });\n                resolve();\n            }\n        };\n\n        xhr.open(\"POST\", postURL);\n        xhr.setRequestHeader('Authorization', authHeader);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Host', host);\n        xhr.setRequestHeader('X-Amz-Date', amzDate);\n        xhr.setRequestHeader('X-Amz-Content-SHA256', bodyHash);\n        xhr.setRequestHeader('Content-Length', (bodyText.length - 2).toString());\n\n        xhr.send(bodyText);\n    });\n}"],"names":["module","CryptoJS","Math","undefined","crypto","window","msCrypto","global","require$$0","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","Error","create","Object","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","this","mixIn","hasOwnProperty","init","$super","apply","arguments","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","i","thatByte","ceil","call","slice","random","nBytes","push","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","data","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","key","HMAC","algo","factory","regexNonASCII","H","K","isPrime","n","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","W","SHA256","_hash","M","a","b","c","d","f","g","h","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","floor","HmacSHA256","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","regexSeparators","errors","stringFromCharCode","error","type","RangeError","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","base","toASCII","input","string","fn","parts","split","result","encoded","array","map","replace","mapDomain","test","handledCPCount","basicLength","bias","j","m","q","t","currentValue","inputLength","handledCPCountPlusOne","baseMinusT","qMinusT","output","value","extra","counter","ucs2decode","encode","isNull","arg","isString","isObject","prop","isArray","Array","xs","stringifyPrimitive","v","isFinite","sep","eq","name","objectKeys","ks","res","keys","qs","options","regexp","maxKeys","len","kstr","vstr","x","idx","indexOf","decode","urlParse","resolve","source","relative","resolveObject","format","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","url","parseQueryString","slashesDenoteHost","u","self","TypeError","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","qsParse","hec","l","p","proto","lowerProto","toLowerCase","match","atSign","hostEnd","lastIndexOf","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","ae","esc","qm","s","qsStringify","charAt","rel","relPath","tkeys","tk","tkey","rkeys","rk","rkey","shift","authInHost","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","last","hasTrailingSlash","up","isAbsolute","LruCache","size","capacity","list","DoublyLinkedList","firstNode","lastNode","DoublyLinkedNode","val","prev","next","get","node","used","set","prune","moveToFront","remove","aws4","exports","credentialsCache","hmac","encoding","createHmac","digest","createHash","encodeRfc3986","urlEncodedString","toUpperCase","encodeRfc3986Full","str","RequestSigner","request","credentials","headers","hostParts","service","region","matchHost","Host","defaultCredentials","method","body","createHost","isCodeCommitGit","reverse","isSingleRegion","prepareRequest","parsePath","signQuery","parsedPath","sessionToken","datetime","getDateTime","accessKeyId","credentialString","signedHeaders","doNotModifyHeaders","Buffer","byteLength","Authorization","authorization","sign","signature","authHeader","formatPath","date","Date","toISOString","getDate","kDate","kRegion","kService","cacheKey","secretAccessKey","kCredentials","stringToSign","canonicalString","bodyHash","pathStr","queryStr","normalizePath","decodePath","doNotEncodePath","decodeSlashesInPath","firstValOnly","reducedQuery","reduce","encodedQueryPieces","sort","forEach","piece","canonicalHeaders","env","process","AWS_ACCESS_KEY_ID","AWS_ACCESS_KEY","AWS_SECRET_ACCESS_KEY","AWS_SECRET_KEY","AWS_SESSION_TOKEN","encodeURI","decodeURI","queryIx","querystring","metadata","systemName","displayName","description","configuration","ondescribe","async","postSchema","objects","methods","inputs","outputs","onexecute","objectName","methodName","parameters","Promise","reject","bodyText","JSON","amzDate","dateStr","chars","getAmzDate","authDate","authKey","postURL","canonicalReq","canonicalReqHash","awsString","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","postResult","open","setRequestHeader","send","onexecutePostText","onexecuteMessage"],"mappings":"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"}